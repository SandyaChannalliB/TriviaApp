{"ast":null,"code":"var _jsxFileName = \"/Users/surajbapu/Sandhya/StudyStuff/FullStack/udacity_projects/TriviaApp/frontend/src/components/QuestionView.js\";\nimport React, { Component } from 'react';\nimport '../stylesheets/App.css';\nimport Question from './Question';\nimport Search from './Search';\nimport $ from 'jquery';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass QuestionView extends Component {\n  constructor(props) {\n    super(props);\n    this.getQuestions = () => {\n      $.ajax({\n        url: `http://127.0.0.1:5000/questions?page=${this.state.page}`,\n        //TODO: update request URL\n        type: \"GET\",\n        success: result => {\n          this.setState({\n            questions: result.questions,\n            totalQuestions: result.total_questions,\n            categories: result.categories,\n            currentCategory: result.current_category\n          });\n        },\n        error: error => {\n          alert('Unable to load questions. Please try your request again');\n        }\n      });\n    };\n    this.getByCategory = id => {\n      $.ajax({\n        url: `http://127.0.0.1:5000/categories/${id}/questions`,\n        //TODO: update request URL\n        type: \"GET\",\n        success: result => {\n          this.setState({\n            questions: result.questions,\n            totalQuestions: result.total_questions,\n            currentCategory: result.current_category\n          });\n        },\n        error: error => {\n          alert('Unable to load questions. Please try your request again');\n        }\n      });\n    };\n    this.submitSearch = searchTerm => {\n      $.ajax({\n        url: `http://127.0.0.1:5000/questions`,\n        //TODO: update request URL\n        type: \"POST\",\n        dataType: 'json',\n        contentType: 'application/json',\n        data: JSON.stringify({\n          searchTerm: searchTerm\n        }),\n        xhrFields: {\n          withCredentials: true\n        },\n        crossDomain: true,\n        success: result => {\n          this.setState({\n            questions: result.questions,\n            totalQuestions: result.total_questions,\n            currentCategory: result.current_category\n          });\n        },\n        error: error => {\n          alert('Unable to load questions. Please try your request again');\n        }\n      });\n    };\n    this.questionAction = id => action => {\n      if (action === 'DELETE') {\n        if (window.confirm('are you sure you want to delete the question?')) {\n          $.ajax({\n            url: `http://127.0.0.1:5000/questions/${id}`,\n            //TODO: update request URL\n            type: \"DELETE\",\n            success: result => {\n              this.getQuestions();\n            },\n            error: error => {\n              alert('Unable to load questions. Please try your request again');\n            }\n          });\n        }\n      }\n    };\n    this.state = {\n      questions: [],\n      page: 1,\n      totalQuestions: 0,\n      categories: {},\n      currentCategory: null\n    };\n  }\n  componentDidMount() {\n    this.getQuestions();\n  }\n  selectPage(num) {\n    this.setState({\n      page: num\n    }, () => this.getQuestions());\n  }\n  createPagination() {\n    let pageNumbers = [];\n    let maxPage = Math.ceil(this.state.totalQuestions / 10);\n    for (let i = 1; i <= maxPage; i++) {\n      pageNumbers.push( /*#__PURE__*/_jsxDEV(\"span\", {\n        className: `page-num ${i === this.state.page ? 'active' : ''}`,\n        onClick: () => {\n          this.selectPage(i);\n        },\n        children: i\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this));\n    }\n    return pageNumbers;\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"question-view\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"categories-list\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          onClick: () => {\n            this.getQuestions();\n          },\n          children: \"Categories\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: Object.keys(this.state.categories).map(id => /*#__PURE__*/_jsxDEV(\"li\", {\n            onClick: () => {\n              this.getByCategory(id);\n            },\n            children: [this.state.categories[id], /*#__PURE__*/_jsxDEV(\"img\", {\n              className: \"category\",\n              src: `${this.state.categories[id]}.svg`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 17\n            }, this)]\n          }, id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Search, {\n          submitSearch: this.submitSearch\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"questions-list\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Questions\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 11\n        }, this), this.state.questions.map(q => /*#__PURE__*/_jsxDEV(Question, {\n          question: q.question,\n          answer: q.answer,\n          category: this.state.categories[q.category],\n          difficulty: q.difficulty,\n          questionAction: this.questionAction(q.id)\n        }, q.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 13\n        }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"pagination-menu\",\n          children: this.createPagination()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default QuestionView;","map":{"version":3,"names":["React","Component","Question","Search","$","jsxDEV","_jsxDEV","QuestionView","constructor","props","getQuestions","ajax","url","state","page","type","success","result","setState","questions","totalQuestions","total_questions","categories","currentCategory","current_category","error","alert","getByCategory","id","submitSearch","searchTerm","dataType","contentType","data","JSON","stringify","xhrFields","withCredentials","crossDomain","questionAction","action","window","confirm","componentDidMount","selectPage","num","createPagination","pageNumbers","maxPage","Math","ceil","i","push","className","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","render","Object","keys","map","src","q","question","answer","category","difficulty"],"sources":["/Users/surajbapu/Sandhya/StudyStuff/FullStack/udacity_projects/TriviaApp/frontend/src/components/QuestionView.js"],"sourcesContent":["import React, { Component } from 'react';\n\nimport '../stylesheets/App.css';\nimport Question from './Question';\nimport Search from './Search';\nimport $ from 'jquery';\n\nclass QuestionView extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      questions: [],\n      page: 1,\n      totalQuestions: 0,\n      categories: {},\n      currentCategory: null,\n    }\n  }\n\n  componentDidMount() {\n    this.getQuestions();\n  }\n\n  getQuestions = () => {\n    $.ajax({\n      url: `http://127.0.0.1:5000/questions?page=${this.state.page}`, //TODO: update request URL\n      type: \"GET\",\n      success: (result) => {\n        this.setState({\n          questions: result.questions,\n          totalQuestions: result.total_questions,\n          categories: result.categories,\n          currentCategory: result.current_category\n        })\n      },\n      error: (error) => {\n        alert('Unable to load questions. Please try your request again')\n      }\n    })\n  }\n\n  selectPage(num) {\n    this.setState({page: num}, () => this.getQuestions());\n  }\n\n  createPagination(){\n    let pageNumbers = [];\n    let maxPage = Math.ceil(this.state.totalQuestions / 10)\n    for (let i = 1; i <= maxPage; i++) {\n      pageNumbers.push(\n        <span\n          key={i}\n          className={`page-num ${i === this.state.page ? 'active' : ''}`}\n          onClick={() => {this.selectPage(i)}}>{i}\n        </span>)\n    }\n    return pageNumbers;\n  }\n\n  getByCategory= (id) => {\n    $.ajax({\n      url: `http://127.0.0.1:5000/categories/${id}/questions`, //TODO: update request URL\n      type: \"GET\",\n      success: (result) => {\n        this.setState({\n          questions: result.questions,\n          totalQuestions: result.total_questions,\n          currentCategory: result.current_category\n        })\n      },\n      error: (error) => {\n        alert('Unable to load questions. Please try your request again')\n      }\n    })\n  }\n\n  submitSearch = (searchTerm) => {\n    $.ajax({\n      url: `http://127.0.0.1:5000/questions`, //TODO: update request URL\n      type: \"POST\",\n      dataType: 'json',\n      contentType: 'application/json',\n      data: JSON.stringify({searchTerm: searchTerm}),\n      xhrFields: {\n        withCredentials: true\n      },\n      crossDomain: true,\n      success: (result) => {\n        this.setState({\n          questions: result.questions,\n          totalQuestions: result.total_questions,\n          currentCategory: result.current_category\n        })\n      },\n      error: (error) => {\n        alert('Unable to load questions. Please try your request again')\n      }\n    })\n  }\n\n  questionAction = (id) => (action) => {\n    if(action === 'DELETE') {\n      if(window.confirm('are you sure you want to delete the question?')) {\n        $.ajax({\n          url: `http://127.0.0.1:5000/questions/${id}`, //TODO: update request URL\n          type: \"DELETE\",\n          success: (result) => {\n            this.getQuestions();\n          },\n          error: (error) => {\n            alert('Unable to load questions. Please try your request again')\n          }\n        })\n      }\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"question-view\">\n        <div className=\"categories-list\">\n          <h2 onClick={() => {this.getQuestions()}}>Categories</h2>\n          <ul>\n            {Object.keys(this.state.categories).map(id => (\n              <li key={id} onClick={() => {this.getByCategory(id)}}>\n                {this.state.categories[id]}\n                <img className=\"category\" src={`${this.state.categories[id]}.svg`}/>\n              </li>\n            ))}\n          </ul>\n          <Search submitSearch={this.submitSearch}/>\n        </div>\n        <div className=\"questions-list\">\n          <h2>Questions</h2>\n          {this.state.questions.map(q => (\n            <Question\n              key={q.id}\n              question={q.question}\n              answer={q.answer}\n              category={this.state.categories[q.category]}\n              difficulty={q.difficulty}\n              questionAction={this.questionAction(q.id)}\n            />\n          ))}\n          <div className=\"pagination-menu\">\n            {this.createPagination()}\n          </div>\n        </div>\n\n      </div>\n    );\n  }\n}\n\nexport default QuestionView;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}